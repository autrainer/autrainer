[project]
name = "autrainer"
version = "0.7.1"
description = "A Modular and Extensible Deep Learning Toolkit for Computer Audition Tasks."
authors = [
    { name = "Simon Rampp", email = "simon.rampp@tum.de" },
    { name = "Andreas Triantafyllopoulos", email = "andreas.triantafyllopoulos@tum.de" },
    { name = "Manuel Milling", email = "manuel.milling@tum.de" },
    { name = "BjÃ¶rn W. Schuller", email = "schuller@tum.de" },
]
readme = "README.rst"
license = "MIT"
keywords = [
    "computer audition",
    "deep learning",
    "artificial intelligence",
    "pytorch",
    "hydra-core",
    "command-line",
    "yaml",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]

requires-python = ">=3.10,<3.12"
dependencies = [
    "audeer>=2.2.1,<3",
    "audiofile>=1.3.0,<2",
    "audmetric>=1.2.0,<2",
    "audobject>=0.7.11,<0.8",
    "audtorch>=0.6.4,<0.7",
    "checksumdir>=1.2.0,<2",
    "fsspec>=2025.3.2",
    "hydra-core>=1.3.2,<2",
    "hydra-filter-sweeper>=2.0.1,<3",
    "matplotlib>=3.7.1,<4",
    "numpy>=1.24.1,<2",
    "omegaconf>=2.3.0,<3",
    "pandas>=2.1.1,<3",
    "Pillow>=9.3.0,<10",
    "psutil>=5.0.0,<6",
    "PyYAML>=6.0.1,<7",
    "Requests>=2.31.0,<3",
    "scikit-learn>=1.3.1,<2",
    "seaborn>=0.13.0,<0.14",
    "speechbrain>=1.0.0,<2",
    "timm>=1.0.3,<2",
    "torch>=2.0.0,<3",
    "torchaudio>=2.0.0",
    "torchinfo>=1.8.0,<2",
    "torchlibrosa>=0.1.0,<0.2",
    "torchvision>=0.15.0",
    "tqdm>=4.66.1,<5",
    "transformers>=4.34.0,<5",
]

[tool.uv]
default-groups = ["dev", "docs"]
override-dependencies = [
    # very hacky workaround for torch + cuda on windows
    # https://github.com/astral-sh/uv/issues/9174#issuecomment-2482710850
    "torch ; sys_platform == 'never'",
    "torch>=2.0.0,<3 ; sys_platform != 'win32'",
    "torchaudio ; sys_platform == 'never'",
    "torchaudio>=2.0.0 ; sys_platform != 'win32'",
    "torchvision ; sys_platform == 'never'",
    "torchvision>=0.15.0 ; sys_platform != 'win32'",
]

[project.urls]
Repository = "https://github.com/autrainer/autrainer"
Documentation = "https://autrainer.github.io/autrainer/"

[project.optional-dependencies]
albumentations = ["albumentations>=1.4.10,<2"]
audiomentations = ["audiomentations>=0.37.0,<0.38"]
latex = ["latex>=0.7.0,<0.8"]
mlflow = ["mlflow>=2.7.1,<3"]
opensmile = ["opensmile>=2.5.0,<3"]
tensorboard = ["tensorboard>=2.16.2,<3"]
torch-audiomentations = ["torch-audiomentations>=0.11.1,<0.12"]
all = [
    "albumentations>=1.4.10,<2",
    "audiomentations>=0.37.0,<0.38",
    "latex>=0.7.0,<0.8",
    "mlflow>=2.7.1,<3",
    "opensmile>=2.5.0,<3",
    "tensorboard>=2.16.2,<3",
    "torch-audiomentations>=0.11.1,<0.12",
]


[project.scripts]
autrainer = "autrainer.core.scripts.cli:main"

[dependency-groups]
dev = [
    "codespell>=2.2.6,<3",
    "pre-commit>=3.7.0,<4",
    "pytest>=8.1.1,<9",
    "pytest-cov>=5.0.0,<6",
    "ruff==0.12.8",
]
docs = [
    "catppuccin[pygments]>=2.3.0,<3",
    "pydata-sphinx-theme>=0.15.3,<0.16",
    "sphinx>=7.3.7,<8",
    "sphinx-argparse>=0.4.0,<0.5",
    "sphinx-autodoc-typehints>=2.2.0,<3",
    "sphinx-copybutton>=0.5.2,<0.6",
    "sphinx-design>=0.6.0,<0.7",
    "sphinxcontrib-jquery~=4.1",
    "toml>=0.10.2,<0.11",
]


[tool.hatch.build.targets.sdist]
include = ["autrainer", "autrainer-configurations"]

[tool.hatch.build.targets.wheel]
include = ["autrainer", "autrainer-configurations"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W",
    "I",
    "N",
    "Q",
    "ANN",
    "BLE",
    "B",
    "C4",
    "ISC",
    "ICN",
    "LOG",
    "G",
    "PYI",
    "PT",
    "RET",
    "SIM",
    "TC",
    "ERA",
]
ignore = ["E741", "N812", "N806", "N802", "ANN401"]

[tool.ruff.lint.isort]
force-sort-within-sections = true
lines-after-imports = 2

[tool.codespell]
skip = "*.ipynb,uv.lock"

[tool.pytest.ini_options]
addopts = "--cov=autrainer --cov-report=term-missing"
testpaths = "tests"

[tool.coverage.report]
omit = ["config.py", "config-3.py"]
